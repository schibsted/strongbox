group = projectGroup

/*
 * Copyright 2016 Schibsted Products & Technology AS. Licensed under the terms of the MIT license. See LICENSE in the project root.
 */

import static java.lang.System.getenv

apply plugin: 'com.jfrog.bintray'

version = getenv('TRAVIS_TAG') ? getenv('TRAVIS_TAG') : "0.0.1";

dependencies {
    compile project(':sdk')

    compile "com.netflix.archaius:archaius-core:$archaiusVersion"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

shadowJar {
    baseName = project.name + '-shadow'
    classifier = ''
}

tasks.withType(Jar) {
    from(project.parent.projectDir) {
        include 'LICENSE', 'NOTICE'
        into 'META-INF'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'strongbox-' + project.name
            groupId group
            artifact jar
            artifact sourceJar {
                classifier "sources"
            }

            // Workaround: https://github.com/gradle/gradle/issues/1061
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.runtime.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        if (it.group == group && it.name == "sdk") {
                            dependencyNode.appendNode('groupId', group)
                            dependencyNode.appendNode('artifactId', "strongbox-sdk")
                            dependencyNode.appendNode('version', version)
                        } else {
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)

                            if (it.excludeRules.size() > 0) {
                                def exclusionsNode = dependencyNode.appendNode('exclusions')
                                it.excludeRules.each { rule ->
                                    def exclusionNode = exclusionsNode.appendNode('exclusion')
                                    exclusionNode.appendNode('groupId', rule.group)
                                    exclusionNode.appendNode('artifactId', rule.module)
                                }
                            }
                        }
                    }
                }
            }
            // end workaround

            pom.withXml {
                asNode().with {
                    appendNode('name', 'Strongbox Archaius')
                    appendNode('description', 'Archaius integration for Strongbox')
                    appendNode('url', 'https://github.com/schibsted/strongbox')
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'MIT')
                            appendNode('url', 'https://github.com/schibsted/strongbox/blob/master/LICENSE')
                        }
                    }
                }
            }
        }
        shaded(MavenPublication) {
            artifactId = 'strongbox-' + project.name + '-shaded'
            from components.shadow
        }
    }
}

bintray {
    user = getenv('BINTRAY_USER')
    key = getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'strongbox-maven'
        name = 'strongbox-archaius'
        userOrg = 'strongbox'
        licenses = ['MIT']
        websiteUrl = 'https://github.com/schibsted/strongbox'
        issueTrackerUrl = 'https://github.com/schibsted/strongbox/issues'
        vcsUrl = 'https://github.com/schibsted/strongbox.git'
        publicDownloadNumbers = false
    }
}
