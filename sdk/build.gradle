/*
 * Copyright (c) 2016 Schibsted Products & Technology AS. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
 */

import static java.lang.System.getenv

apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'maven-publish'

group = projectGroup
version = getenv('TRAVIS_TAG') ? getenv('TRAVIS_TAG') : "0.0.1";

java {
    withSourcesJar()
    withJavadocJar()
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output

        java.srcDir file('src/integrationTest/java')
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom(implementation)
    integrationTestImplementation.extendsFrom(testImplementation)
}

dependencies {
    implementation("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion")
    implementation("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")

    implementation("com.amazonaws:aws-java-sdk-core:$awsVersion")
    implementation("com.amazonaws:aws-java-sdk-dynamodb:$awsVersion")
    implementation("com.amazonaws:aws-java-sdk-kms:$awsVersion")
    implementation("com.amazonaws:aws-java-sdk-iam:$awsVersion")
    implementation("com.amazonaws:aws-java-sdk-sts:$awsVersion")
    implementation("com.amazonaws:aws-encryption-sdk-java:$awsEncryptionVersion")

    implementation("com.google.guava:guava:$guavaVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")

    testImplementation("org.hamcrest:hamcrest-all:$hamcrestVersion")
    testImplementation("org.hamcrest:hamcrest-core:$hamcrestVersion")
    testImplementation("org.testng:testng:$testngVersion") {
        exclude module: 'junit'
    }
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    testLogging {
        events "passed", "skipped", "failed"
    }

    useTestNG()
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }
}

task jacocoIntegrationTestReport(type: JacocoReport) {
    sourceSets sourceSets.main
    executionData integrationTest
}

tasks.withType(Jar) {
    from(project.parent.projectDir) {
        include 'LICENSE', 'NOTICE'
        into 'META-INF'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'strongbox-' + project.name
            from components.java
            pom {
                name.set("Strongbox SDK")
                description.set("A secret management solution")
                url.set("https://github.com/schibsted/strongbox")
                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
                developers {
                    developer {
                        name.set("Stian Kristoffersen")
                        email.set("strongbox@schibsted.com")
                    }
                }
                scm {
                    connection.set("scm:git:git://github.com/schibsted/strongbox.git")
                    developerConnection.set("scm:git:ssh://github.com:schibsted/strongbox.git")
                    url.set("https://github.com/schibsted/strongbox")
                }
            }
        }
    }
}

signing {
    required { version != '0.0.1' }
    sign publishing.publications.mavenJava
}

javadoc {
    exclude("**/internal/**")
}
